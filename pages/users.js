import { getUsers } from "@/redux/actions/usersAction";
import CustomField from "@/src/components/Custom Field";
import MyUsersTable from "@/src/components/Users Table";
import { Box, IconButton } from "@mui/material";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect , useState } from "react";
import { useDispatch, useSelector } from "react-redux";

const Users = () => {
  const router = useRouter();
  const dispatch = useDispatch();
  const { users } = useSelector(state => ({
    users : state.users.users
  }))
  const [searchTerm, setSearchTerm] = useState('');

  useEffect(() => {
    const token = localStorage.getItem("token");
    if (!token) {
      router.push("/sign-in");
    }
  }, []);

  useEffect(() => {
    dispatch(getUsers());
  }, [dispatch]);

  const filteredUsers = users.filter(invitation => {
    if (searchTerm.trim() === '') {
      // Display all users when searchTerm is empty
      return true;
    } else {
      // Filter users based on search term
      const fullName = `${invitation.fName} ${invitation.lName}`.toLowerCase();
    return fullName.includes(searchTerm.toLowerCase());
    }
  });

  return (
    <>
      <Head>
        <title>DVF - קורס עריכת וידאו בכדורגל - משתמשים</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box>
        <h1 style={{ textAlign: 'center', color: '#FFFF' }}>משתמשים</h1>
        <Box sx={{ textAlign: 'center' }}>
          <CustomField
            placeholder="חיפוש..."
            value={searchTerm}
            onChange={e => setSearchTerm(e.target.value)}
            sx={{ width: '30rem', mr: 1 }}
          />
            <MyUsersTable>
            {filteredUsers}
          </MyUsersTable>
        </Box>
      </Box>
    </>
  );
};

export default Users;
